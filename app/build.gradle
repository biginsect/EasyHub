apply plugin: 'com.android.application'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'kotlin-android'
apply plugin: 'org.greenrobot.greendao'


buildProperties{
    getPublic {
        file rootProject.file('public.properties')
    }
}
android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.lipeng.mygithub"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        buildConfigField "String","CLIENT_ID", (buildProperties.getPublic['client_id']).string
        buildConfigField "String","CLIENT_SECRET", (buildProperties.getPublic['client_secret']).string
        buildConfigField "String","DEBUG_BUGLY_ID", (buildProperties.getPublic['debug_bugly_id']).string
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    flavorDimensions "default"

    sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res/anim','libs'] } }
}
/**
 * 防止第三方包使用的support库与当前app使用的support库不一致
 * 强制使所有用到support库的模块使用相同的support库
 * */
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "${ANDROID_SUPPORT_VERSION}"
            }
        }
    }
}

/**
 * greenDao配置
 * */
greendao{

    schemaVersion 1//数据库版本
    daoPackage 'com.lipeng.mygithub.dao'
    targetGenDir   'src/main/java' //自动生成的代码存储的路径，
    generateTests false //true的时候自动生成测试单元
}


repositories {
    mavenCentral() // add repository
    maven { url "https://jitpack.io" }
    google()
    flatDir {
        dirs 'libs' //aar
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:support-v4:${ANDROID_SUPPORT_VERSION}"

    implementation "com.android.support:appcompat-v7:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:design:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support.constraint:constraint-layout:${CONSTRAINT_VERSION}"
    testImplementation "junit:junit:${JUNIT_VERSION}"
    androidTestImplementation "com.android.support.test:runner:${RUNNER_VERSION}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${ESPRESSO_CORE_VERSION}"
    implementation "com.android.support:recyclerview-v7:${ANDROID_SUPPORT_VERSION}"

    //butterKnife
    implementation "com.jakewharton:butterknife:${BUTTERKNIFE_VERSION}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${BUTTERKNIFE_VERSION}"
    //网络加载
    implementation "com.squareup.okhttp3:okhttp:${OKHTTP_VERSION}"
    //glide
    implementation("com.github.bumptech.glide:glide:${GLIDE_VERSION}"){
        exclude group: "com.android.support"
    }
    annotationProcessor "com.github.bumptech.glide:compiler:${GLIDE_VERSION}"
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:adapter-rxjava:${RETROFIT_VERSION}"
    implementation ("com.squareup.retrofit2:converter-simplexml:${RETROFIT_VERSION}"){
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }
    //美化提示框
    implementation "com.github.GrenderG:Toasty:${TOASTY_VERSION}"

    //rxJava
    implementation "io.reactivex.rxjava2:rxandroid:${RXANDROID_VERSION}"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation "io.reactivex.rxjava2:rxjava:${RXJAVA_VERSION}"

    // apt command comes from the android-apt plugin
    implementation "com.google.dagger:dagger:${DAGGER_VERSION}"
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    //java注解
    implementation 'org.glassfish:javax.annotation:10.0-b28'

    //美化的button
    implementation "com.unstoppable:submitbutton:${SUBMITBUTTON_VERSION}"
    //greendao
    implementation "org.greenrobot:greendao:${GREENDAO_VERSION}"
    //Loger 第三方日志打印工具
    implementation "com.orhanobut:logger:${LOGGER_VERSION}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "org.jsoup:jsoup:${JSOUP_VERSION}"
    implementation "com.thirtydegreesray:dataautoaccess:$DATAAUTOACCESS_VERSION"
    annotationProcessor "com.thirtydegreesray:dataautoaccess-compiler:$DATAAUTOACCESS_VERSION"
}
